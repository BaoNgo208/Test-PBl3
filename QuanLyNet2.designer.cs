#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PBL3_QLQuanNet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_QuanNet")]
	public partial class QuanLyNet2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertComputer(Computer instance);
    partial void UpdateComputer(Computer instance);
    partial void DeleteComputer(Computer instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertWorkShift(WorkShift instance);
    partial void UpdateWorkShift(WorkShift instance);
    partial void DeleteWorkShift(WorkShift instance);
    #endregion
		
		public QuanLyNet2DataContext() : 
				base(global::PBL3_QLQuanNet.Properties.Settings.Default.QL_QuanNetConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNet2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNet2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNet2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyNet2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Computer> Computers
		{
			get
			{
				return this.GetTable<Computer>();
			}
		}
		
		public System.Data.Linq.Table<DetailAccount> DetailAccounts
		{
			get
			{
				return this.GetTable<DetailAccount>();
			}
		}
		
		public System.Data.Linq.Table<DetailWorkShift> DetailWorkShifts
		{
			get
			{
				return this.GetTable<DetailWorkShift>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<WorkShift> WorkShifts
		{
			get
			{
				return this.GetTable<WorkShift>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		//public static int count = 1;

		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Account;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _Type;
		
		private EntitySet<Computer> _Computers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    #endregion
		
		public Account()
		{
			this._Computers = new EntitySet<Computer>(new Action<Computer>(this.attach_Computers), new Action<Computer>(this.detach_Computers));
			
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="VarChar(40) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(40)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(40)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Computer", Storage="_Computers", ThisKey="ID_Account", OtherKey="ID_Account")]
		public EntitySet<Computer> Computers
		{
			get
			{
				return this._Computers;
			}
			set
			{
				this._Computers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Computers(Computer entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Computers(Computer entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Bill;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _Money;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BillChanging(int value);
    partial void OnID_BillChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnMoneyChanging(System.Nullable<int> value);
    partial void OnMoneyChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public Bill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Bill", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Bill
		{
			get
			{
				return this._ID_Bill;
			}
			set
			{
				if ((this._ID_Bill != value))
				{
					this.OnID_BillChanging(value);
					this.SendPropertyChanging();
					this._ID_Bill = value;
					this.SendPropertyChanged("ID_Bill");
					this.OnID_BillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Money", DbType="Int")]
		public System.Nullable<int> Money
		{
			get
			{
				return this._Money;
			}
			set
			{
				if ((this._Money != value))
				{
					this.OnMoneyChanging(value);
					this.SendPropertyChanging();
					this._Money = value;
					this.SendPropertyChanged("Money");
					this.OnMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Computer")]
	public partial class Computer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Computer;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _State;
		
		private string _ID_Account;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ComputerChanging(int value);
    partial void OnID_ComputerChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnID_AccountChanging(string value);
    partial void OnID_AccountChanged();
    #endregion
		
		public Computer()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Computer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Computer
		{
			get
			{
				return this._ID_Computer;
			}
			set
			{
				if ((this._ID_Computer != value))
				{
					this.OnID_ComputerChanging(value);
					this.SendPropertyChanging();
					this._ID_Computer = value;
					this.SendPropertyChanged("ID_Computer");
					this.OnID_ComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="VarChar(40)")]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AccountChanging(value);
					this.SendPropertyChanging();
					this._ID_Account = value;
					this.SendPropertyChanged("ID_Account");
					this.OnID_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Computer", Storage="_Account", ThisKey="ID_Account", OtherKey="ID_Account", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Computers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Computers.Add(this);
						this._ID_Account = value.ID_Account;
					}
					else
					{
						this._ID_Account = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailAccount")]
	public partial class DetailAccount
	{
		
		private string _ID_Account;
		
		private System.Nullable<int> _ID_Person;
		
		public DetailAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Account", DbType="VarChar(40)")]
		public string ID_Account
		{
			get
			{
				return this._ID_Account;
			}
			set
			{
				if ((this._ID_Account != value))
				{
					this._ID_Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Person", DbType="Int")]
		public System.Nullable<int> ID_Person
		{
			get
			{
				return this._ID_Person;
			}
			set
			{
				if ((this._ID_Person != value))
				{
					this._ID_Person = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailWorkShift")]
	public partial class DetailWorkShift
	{
		
		private System.Nullable<int> _ID_WorkShift;
		
		private System.Nullable<int> _ID_Person;
		
		private System.Nullable<int> _State;
		
		public DetailWorkShift()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_WorkShift", DbType="Int")]
		public System.Nullable<int> ID_WorkShift
		{
			get
			{
				return this._ID_WorkShift;
			}
			set
			{
				if ((this._ID_WorkShift != value))
				{
					this._ID_WorkShift = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Person", DbType="Int")]
		public System.Nullable<int> ID_Person
		{
			get
			{
				return this._ID_Person;
			}
			set
			{
				if ((this._ID_Person != value))
				{
					this._ID_Person = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Price;
		
		private System.Nullable<int> _ImPrice;
		
		private System.Nullable<int> _ExPrice;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PriceChanging(int value);
    partial void OnID_PriceChanged();
    partial void OnImPriceChanging(System.Nullable<int> value);
    partial void OnImPriceChanged();
    partial void OnExPriceChanging(System.Nullable<int> value);
    partial void OnExPriceChanged();
    #endregion
		
		public Price()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Price", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Price
		{
			get
			{
				return this._ID_Price;
			}
			set
			{
				if ((this._ID_Price != value))
				{
					this.OnID_PriceChanging(value);
					this.SendPropertyChanging();
					this._ID_Price = value;
					this.SendPropertyChanged("ID_Price");
					this.OnID_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImPrice", DbType="Int")]
		public System.Nullable<int> ImPrice
		{
			get
			{
				return this._ImPrice;
			}
			set
			{
				if ((this._ImPrice != value))
				{
					this.OnImPriceChanging(value);
					this.SendPropertyChanging();
					this._ImPrice = value;
					this.SendPropertyChanged("ImPrice");
					this.OnImPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExPrice", DbType="Int")]
		public System.Nullable<int> ExPrice
		{
			get
			{
				return this._ExPrice;
			}
			set
			{
				if ((this._ExPrice != value))
				{
					this.OnExPriceChanging(value);
					this.SendPropertyChanging();
					this._ExPrice = value;
					this.SendPropertyChanged("ExPrice");
					this.OnExPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Price_Product", Storage="_Products", ThisKey="ID_Price", OtherKey="ID_Price")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Price = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Price = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Person;
		
		private System.Nullable<int> _Type;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CCCD;
		
		private string _PhoneNum;
		
		private System.Nullable<int> _Works;
		
		private EntitySet<Salary> _Salaries;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PersonChanging(int value);
    partial void OnID_PersonChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnPhoneNumChanging(string value);
    partial void OnPhoneNumChanged();
    partial void OnWorksChanging(System.Nullable<int> value);
    partial void OnWorksChanged();
    #endregion
		
		public Person()
		{
			this._Salaries = new EntitySet<Salary>(new Action<Salary>(this.attach_Salaries), new Action<Salary>(this.detach_Salaries));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Person", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Person
		{
			get
			{
				return this._ID_Person;
			}
			set
			{
				if ((this._ID_Person != value))
				{
					this.OnID_PersonChanging(value);
					this.SendPropertyChanging();
					this._ID_Person = value;
					this.SendPropertyChanged("ID_Person");
					this.OnID_PersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="VarChar(30)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="VarChar(30)")]
		public string PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Works", DbType="Int")]
		public System.Nullable<int> Works
		{
			get
			{
				return this._Works;
			}
			set
			{
				if ((this._Works != value))
				{
					this.OnWorksChanging(value);
					this.SendPropertyChanging();
					this._Works = value;
					this.SendPropertyChanged("Works");
					this.OnWorksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Salary", Storage="_Salaries", ThisKey="ID_Person", OtherKey="ID_Person")]
		public EntitySet<Salary> Salaries
		{
			get
			{
				return this._Salaries;
			}
			set
			{
				this._Salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Vehicle", Storage="_Vehicles", ThisKey="ID_Person", OtherKey="ID_Person")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Product;
		
		private string _Name;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<int> _ID_Price;
		
		private EntityRef<Price> _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ProductChanging(int value);
    partial void OnID_ProductChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnID_PriceChanging(System.Nullable<int> value);
    partial void OnID_PriceChanged();
    #endregion
		
		public Product()
		{
			this._Price = default(EntityRef<Price>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Product
		{
			get
			{
				return this._ID_Product;
			}
			set
			{
				if ((this._ID_Product != value))
				{
					this.OnID_ProductChanging(value);
					this.SendPropertyChanging();
					this._ID_Product = value;
					this.SendPropertyChanged("ID_Product");
					this.OnID_ProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Price", DbType="Int")]
		public System.Nullable<int> ID_Price
		{
			get
			{
				return this._ID_Price;
			}
			set
			{
				if ((this._ID_Price != value))
				{
					if (this._Price.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PriceChanging(value);
					this.SendPropertyChanging();
					this._ID_Price = value;
					this.SendPropertyChanged("ID_Price");
					this.OnID_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Price_Product", Storage="_Price", ThisKey="ID_Price", OtherKey="ID_Price", IsForeignKey=true)]
		public Price Price
		{
			get
			{
				return this._Price.Entity;
			}
			set
			{
				Price previousValue = this._Price.Entity;
				if (((previousValue != value) 
							|| (this._Price.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Price.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Price.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ID_Price = value.ID_Price;
					}
					else
					{
						this._ID_Price = default(Nullable<int>);
					}
					this.SendPropertyChanged("Price");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Salary;
		
		private System.Nullable<int> _ID_Person;
		
		private System.Nullable<int> _Salary1;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SalaryChanging(int value);
    partial void OnID_SalaryChanged();
    partial void OnID_PersonChanging(System.Nullable<int> value);
    partial void OnID_PersonChanged();
    partial void OnSalary1Changing(System.Nullable<int> value);
    partial void OnSalary1Changed();
    #endregion
		
		public Salary()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Salary", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Salary
		{
			get
			{
				return this._ID_Salary;
			}
			set
			{
				if ((this._ID_Salary != value))
				{
					this.OnID_SalaryChanging(value);
					this.SendPropertyChanging();
					this._ID_Salary = value;
					this.SendPropertyChanged("ID_Salary");
					this.OnID_SalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Person", DbType="Int")]
		public System.Nullable<int> ID_Person
		{
			get
			{
				return this._ID_Person;
			}
			set
			{
				if ((this._ID_Person != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PersonChanging(value);
					this.SendPropertyChanging();
					this._ID_Person = value;
					this.SendPropertyChanged("ID_Person");
					this.OnID_PersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Salary", Storage="_Salary1", DbType="Int")]
		public System.Nullable<int> Salary1
		{
			get
			{
				return this._Salary1;
			}
			set
			{
				if ((this._Salary1 != value))
				{
					this.OnSalary1Changing(value);
					this.SendPropertyChanging();
					this._Salary1 = value;
					this.SendPropertyChanged("Salary1");
					this.OnSalary1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Salary", Storage="_Person", ThisKey="ID_Person", OtherKey="ID_Person", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Salaries.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Salaries.Add(this);
						this._ID_Person = value.ID_Person;
					}
					else
					{
						this._ID_Person = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Ticket;
		
		private System.Nullable<int> _ID_Vehicle;
		
		private System.Nullable<System.TimeSpan> _ArrivalTime;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TicketChanging(int value);
    partial void OnID_TicketChanged();
    partial void OnID_VehicleChanging(System.Nullable<int> value);
    partial void OnID_VehicleChanged();
    partial void OnArrivalTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnArrivalTimeChanged();
    #endregion
		
		public Ticket()
		{
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Ticket", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Ticket
		{
			get
			{
				return this._ID_Ticket;
			}
			set
			{
				if ((this._ID_Ticket != value))
				{
					this.OnID_TicketChanging(value);
					this.SendPropertyChanging();
					this._ID_Ticket = value;
					this.SendPropertyChanged("ID_Ticket");
					this.OnID_TicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Vehicle", DbType="Int")]
		public System.Nullable<int> ID_Vehicle
		{
			get
			{
				return this._ID_Vehicle;
			}
			set
			{
				if ((this._ID_Vehicle != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_VehicleChanging(value);
					this.SendPropertyChanging();
					this._ID_Vehicle = value;
					this.SendPropertyChanged("ID_Vehicle");
					this.OnID_VehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this.OnArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTime = value;
					this.SendPropertyChanged("ArrivalTime");
					this.OnArrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Ticket", Storage="_Vehicle", ThisKey="ID_Vehicle", OtherKey="ID_Vehicle", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ID_Vehicle = value.ID_Vehicle;
					}
					else
					{
						this._ID_Vehicle = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Vehicle;
		
		private string _LicensePlates;
		
		private System.Nullable<int> _ID_Person;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_VehicleChanging(int value);
    partial void OnID_VehicleChanged();
    partial void OnLicensePlatesChanging(string value);
    partial void OnLicensePlatesChanged();
    partial void OnID_PersonChanging(System.Nullable<int> value);
    partial void OnID_PersonChanged();
    #endregion
		
		public Vehicle()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Vehicle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Vehicle
		{
			get
			{
				return this._ID_Vehicle;
			}
			set
			{
				if ((this._ID_Vehicle != value))
				{
					this.OnID_VehicleChanging(value);
					this.SendPropertyChanging();
					this._ID_Vehicle = value;
					this.SendPropertyChanged("ID_Vehicle");
					this.OnID_VehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicensePlates", DbType="VarChar(30)")]
		public string LicensePlates
		{
			get
			{
				return this._LicensePlates;
			}
			set
			{
				if ((this._LicensePlates != value))
				{
					this.OnLicensePlatesChanging(value);
					this.SendPropertyChanging();
					this._LicensePlates = value;
					this.SendPropertyChanged("LicensePlates");
					this.OnLicensePlatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Person", DbType="Int")]
		public System.Nullable<int> ID_Person
		{
			get
			{
				return this._ID_Person;
			}
			set
			{
				if ((this._ID_Person != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PersonChanging(value);
					this.SendPropertyChanging();
					this._ID_Person = value;
					this.SendPropertyChanged("ID_Person");
					this.OnID_PersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Ticket", Storage="_Tickets", ThisKey="ID_Vehicle", OtherKey="ID_Vehicle")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Vehicle", Storage="_Person", ThisKey="ID_Person", OtherKey="ID_Person", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._ID_Person = value.ID_Person;
					}
					else
					{
						this._ID_Person = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkShift")]
	public partial class WorkShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_WorkShift;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.TimeSpan> _TimeBegin;
		
		private System.Nullable<System.TimeSpan> _TimeEnd;
		
		private System.Nullable<System.DateTime> _Date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_WorkShiftChanging(int value);
    partial void OnID_WorkShiftChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnTimeBeginChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeBeginChanged();
    partial void OnTimeEndChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeEndChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public WorkShift()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_WorkShift", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_WorkShift
		{
			get
			{
				return this._ID_WorkShift;
			}
			set
			{
				if ((this._ID_WorkShift != value))
				{
					this.OnID_WorkShiftChanging(value);
					this.SendPropertyChanging();
					this._ID_WorkShift = value;
					this.SendPropertyChanged("ID_WorkShift");
					this.OnID_WorkShiftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeBegin", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeBegin
		{
			get
			{
				return this._TimeBegin;
			}
			set
			{
				if ((this._TimeBegin != value))
				{
					this.OnTimeBeginChanging(value);
					this.SendPropertyChanging();
					this._TimeBegin = value;
					this.SendPropertyChanged("TimeBegin");
					this.OnTimeBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="Time")]
		public System.Nullable<System.TimeSpan> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
